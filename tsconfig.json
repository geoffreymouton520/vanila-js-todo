{
  "extends": "@tsconfig/node14/tsconfig.json",
  "include": ["src/**/*"],
  "exclude": ["node_modules", "**/*.spec.ts"],
  "compilerOptions": {
    "moduleResolution": "node",
    "outDir": "./dist/",
    "baseUrl": "./",
    "sourceMap": true,
    "declaration": false,
    "downlevelIteration": true,
    "experimentalDecorators": true,
    "module": "ES2020",
    "importHelpers": true,
    "typeRoots": ["node_modules/@types"],
    "lib": ["es2018", "dom"],
    "removeComments": false,
    "noImplicitAny": true,
    "suppressImplicitAnyIndexErrors": false,
    "strictNullChecks": false,
    "allowUnreachableCode": false,
    "allowJs": false,
    "noUnusedLocals": true,
    "alwaysStrict": true,
    "allowSyntheticDefaultImports": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitReturns": true,
    "noUnusedParameters": true,
    "noImplicitThis": true,
    "noResolve": false,
    "pretty": true,
    "target": "ES2018",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "strictFunctionTypes": true,
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,
    /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
    "strictPropertyInitialization": true,
    /* Check for class properties that are declared but not set in the constructor. */
    "useUnknownInCatchVariables": true,
    /* Type catch clause variables as 'unknown' instead of 'any'. */
    "exactOptionalPropertyTypes": true,
    /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noUncheckedIndexedAccess": true,
    /* Include 'undefined' in index signature results */
    "noImplicitOverride": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true,
    /* Enforces using indexed accessors for keys declared using an indexed type */
    "allowUnusedLabels": true,
    /* Disable error reporting for unused labels. */
    "skipLibCheck": true
  }
}
